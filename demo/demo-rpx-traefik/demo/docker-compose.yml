version: '3'

services:
  reverse-proxy:
    # The official v2.0 Traefik docker image
    image: traefik:v2.0
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  frontend:
    image: gvergne/demo-front
    restart: unless-stopped
    environment:
      - NGINX_PORT=80
    ports:
      - "80"
    labels:
      - "traefik.http.routers.frontend.rule=Host(`demo.192.168.1.21.nip.io`)"

  backend:
    image: gvergne/demo-back
    restart: unless-stopped
    environment:
      - DATABASE_HOST=database
      - DATABASE_USER=todo
      - DATABASE_PASSWORD=todo
      - DATABASE_BASE=todo
      - HIBERNATE_DLLAUTO=create-drop
      #- HIBERNATE_DLLAUTO=create
      #- HIBERNATE_DLLAUTO=update
      #- HIBERNATE_DLLAUTO=create
      - APPLICATION_PORT=80
      #- APPLICATION_CONTEXT=/
    ports:
      - "80"
    labels:
      - "traefik.http.routers.backend.rule=Host(`demo.192.168.1.21.nip.io`) && PathPrefix(`/api/backend`)"
    depends_on:
      - database
    links:
      - database

  database:
    image: postgres:11.1
    restart: unless-stopped
    environment:
      - POSTGRES_USER=todo
      - POSTGRES_PASSWORD=todo
      - POSTGRES_DB=todo
    volumes:
      - ~/data/db/docker/demo/postgresql:/var/lib/postgresql/data